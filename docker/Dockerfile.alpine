# 多架构Alpine Docker镜像 - 使用预编译的musl二进制文件
# 支持 linux/amd64 和 linux/arm64 架构
FROM alpine:3.18

# 安装运行时依赖（包含防火墙工具）
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    iptables \
    ip6tables \
    nftables \
    && adduser -D -s /bin/false smartforward

WORKDIR /app

# 根据架构复制对应的预编译二进制文件
ARG TARGETARCH
COPY --from=binaries ${TARGETARCH}/smart-forward /usr/local/bin/smart-forward

# 创建测试配置（支持内核态转发）
RUN printf 'logging:\n  level: "info"\n  format: "text"\nnetwork:\n  listen_addr: "0.0.0.0"\nbuffer_size: 8192\nrules:\n  - name: "HTTP_TEST"\n    listen_port: 8080\n    protocol: "tcp"\n    targets:\n      - "httpbin.org:80"\n  - name: "DNS_TEST"\n    listen_port: 8053\n    protocol: "tcp"\n    targets:\n      - "1.1.1.1:53"\n  - name: "KERNEL_TEST"\n    listen_port: 9090\n    protocol: "tcp"\n    targets:\n      - "example.com:80"\n' > /app/config.yaml && \
    mkdir -p /app/logs && \
    chown -R smartforward:smartforward /app && \
    chmod +x /usr/local/bin/smart-forward

USER smartforward

EXPOSE 443 99 6690 999

ENV RUST_LOG=info TZ=Asia/Shanghai

# 健康检查：检查进程是否运行
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD pgrep smart-forward > /dev/null || exit 1

CMD ["/usr/local/bin/smart-forward", "-c", "/app/config.yaml"]
